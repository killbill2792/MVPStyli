import React, { useState } from 'react';
import { SafeAreaView, View, Text, Pressable, Image, StyleSheet, Alert, StatusBar } from 'react-native';
import * as ImagePicker from 'expo-image-picker';

export default function App() {
  const [route, setRoute] = useState('onboarding');
  const [twinUri, setTwinUri] = useState(null);

  const pickImage = async () => {
    try {
      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();
      if (status !== 'granted') {
        Alert.alert('Permission required', 'Please allow photo access.');
        return;
      }
      const result = await ImagePicker.launchImageLibraryAsync({
        mediaTypes: ImagePicker.MediaTypeOptions.Images,
        quality: 0.9,
      });
      if (!result.canceled) {
        setTwinUri(result.assets[0].uri);
      }
    } catch (error) {
      Alert.alert('Error', 'Failed to pick image');
    }
  };

  const nextScreen = () => {
    if (route === 'onboarding') {
      setRoute('shop');
    } else if (route === 'shop') {
      setRoute('tryon');
    } else {
      setRoute('onboarding');
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar barStyle="light-content" />
      
      <View style={styles.header}>
        <Text style={styles.headerText}>MVPStyli</Text>
        <Text style={styles.subText}>AI Fashion Assistant</Text>
      </View>

      <View style={styles.content}>
        {route === 'onboarding' && (
          <View style={styles.screen}>
            <Text style={styles.title}>Create Your Style Twin</Text>
            <Text style={styles.description}>
              Upload a clear photo to get started with AI-powered fashion recommendations.
            </Text>
            
            <Pressable style={styles.button} onPress={pickImage}>
              <Text style={styles.buttonText}>
                {twinUri ? 'Photo Selected ✓' : 'Upload Photo'}
              </Text>
            </Pressable>

            {twinUri && (
              <View style={styles.imagePreview}>
                <Image source={{ uri: twinUri }} style={styles.previewImage} />
              </View>
            )}

            <Pressable 
              style={[styles.button, styles.primaryButton]} 
              onPress={nextScreen}
              disabled={!twinUri}
            >
              <Text style={styles.primaryButtonText}>Continue →</Text>
            </Pressable>
          </View>
        )}

        {route === 'shop' && (
          <View style={styles.screen}>
            <Text style={styles.title}>Curated for You</Text>
            <Text style={styles.description}>
              Discover fashion items that match your style.
            </Text>
            
            <View style={styles.productGrid}>
              <View style={styles.productCard}>
                <Image 
                  source={{ uri: 'https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?q=80&auto=format&fit=crop&w=300' }} 
                  style={styles.productImage} 
                />
                <Text style={styles.productTitle}>Denim Jacket</Text>
                <Text style={styles.productPrice}>$69</Text>
              </View>
              
              <View style={styles.productCard}>
                <Image 
                  source={{ uri: 'https://images.unsplash.com/photo-1503342217505-b0a15cf70489?q=80&auto=format&fit=crop&w=300' }} 
                  style={styles.productImage} 
                />
                <Text style={styles.productTitle}>Black Blazer</Text>
                <Text style={styles.productPrice}>$119</Text>
              </View>
            </View>

            <Pressable style={[styles.button, styles.primaryButton]} onPress={nextScreen}>
              <Text style={styles.primaryButtonText}>Try On →</Text>
            </Pressable>
          </View>
        )}

        {route === 'tryon' && (
          <View style={styles.screen}>
            <Text style={styles.title}>Try On Experience</Text>
            <Text style={styles.description}>
              See how items look on you with AI-powered visualization.
            </Text>
            
            {twinUri && (
              <View style={styles.tryOnContainer}>
                <Image source={{ uri: twinUri }} style={styles.tryOnImage} />
                <View style={styles.overlay}>
                  <Text style={styles.overlayText}>AI Try-On Active</Text>
                </View>
              </View>
            )}

            <Pressable style={[styles.button, styles.primaryButton]} onPress={nextScreen}>
              <Text style={styles.primaryButtonText}>Back to Start</Text>
            </Pressable>
          </View>
        )}
      </View>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#000',
  },
  header: {
    padding: 20,
    alignItems: 'center',
    borderBottomWidth: 1,
    borderBottomColor: '#333',
  },
  headerText: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#fff',
  },
  subText: {
    fontSize: 14,
    color: '#888',
    marginTop: 4,
  },
  content: {
    flex: 1,
    padding: 20,
  },
  screen: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#fff',
    textAlign: 'center',
    marginBottom: 16,
  },
  description: {
    fontSize: 16,
    color: '#ccc',
    textAlign: 'center',
    marginBottom: 32,
    lineHeight: 24,
  },
  button: {
    backgroundColor: '#333',
    paddingHorizontal: 24,
    paddingVertical: 12,
    borderRadius: 12,
    marginVertical: 8,
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
  primaryButton: {
    backgroundColor: '#fff',
  },
  primaryButtonText: {
    color: '#000',
    fontSize: 16,
    fontWeight: 'bold',
  },
  imagePreview: {
    marginVertical: 20,
    borderRadius: 12,
    overflow: 'hidden',
  },
  previewImage: {
    width: 200,
    height: 200,
  },
  productGrid: {
    flexDirection: 'row',
    gap: 16,
    marginBottom: 32,
  },
  productCard: {
    flex: 1,
    backgroundColor: '#111',
    borderRadius: 12,
    padding: 12,
    alignItems: 'center',
  },
  productImage: {
    width: 120,
    height: 120,
    borderRadius: 8,
    marginBottom: 8,
  },
  productTitle: {
    color: '#fff',
    fontSize: 14,
    fontWeight: '600',
    marginBottom: 4,
  },
  productPrice: {
    color: '#888',
    fontSize: 12,
  },
  tryOnContainer: {
    position: 'relative',
    marginBottom: 32,
    borderRadius: 12,
    overflow: 'hidden',
  },
  tryOnImage: {
    width: 250,
    height: 300,
  },
  overlay: {
    position: 'absolute',
    top: 12,
    left: 12,
    backgroundColor: 'rgba(0,0,0,0.7)',
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 8,
  },
  overlayText: {
    color: '#fff',
    fontSize: 12,
    fontWeight: '600',
  },
});
